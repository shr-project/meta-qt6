From 5f7bc5a9ed2429705c37ac176a385ce7ec100d33 Mon Sep 17 00:00:00 2001
From: Samuli Piippo <samuli.piippo@qt.io>
Date: Fri, 17 Sep 2021 07:55:21 +0300
Subject: [PATCH] abseil-cpp: fix build with glibc-2.34

Backport upstream fix for:
 ../../../../../git/src/3rdparty/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc: In function 'bool absl::SetupAlternateStackOnce()':
 ../../../../../git/src/3rdparty/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc:139:32: error: no matching function for call to 'max(long int, int)'
   size_t stack_size = (std::max(SIGSTKSZ, 65536) + page_mask) & ~page_mask;
                        ~~~~~~~~^~~~~~~~~~~~~~~~~

Caused by SIGSTCKZ no longer being compile time constant in glibc-2.34.

https://github.com/abseil/abseil-cpp/commit/a9831f1cbf93fb18dd951453635f488037454ce9

Change-Id: I88611684c25ffbc9d8a27a02ca55b906098b48a8
---
 .../abseil-cpp/absl/debugging/failure_signal_handler.cc        | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc b/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc
index a9ed6ef9648..3ddebd74ecf 100644
--- a/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc
+++ b/chromium/third_party/abseil-cpp/absl/debugging/failure_signal_handler.cc
@@ -136,7 +136,8 @@ static bool SetupAlternateStackOnce() {
 #else
   const size_t page_mask = sysconf(_SC_PAGESIZE) - 1;
 #endif
-  size_t stack_size = (std::max(SIGSTKSZ, 65536) + page_mask) & ~page_mask;
+  size_t stack_size =
+      (std::max<size_t>(SIGSTKSZ, 65536) + page_mask) & ~page_mask;
 #if defined(ABSL_HAVE_ADDRESS_SANITIZER) || \
     defined(ABSL_HAVE_MEMORY_SANITIZER) || defined(ABSL_HAVE_THREAD_SANITIZER)
   // Account for sanitizer instrumentation requiring additional stack space.
